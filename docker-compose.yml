version: "3.7"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.0.1
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  postgresql-db:
    image: postgres
    container_name: postgres-container
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"

  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: mongo

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:mongo@mongo:27017/

  api-gateway:
    build: "./api-gateway"
    container_name: api-gateway-container
    restart: always
    depends_on:
      - discovery-server
    ports:
      - "8080:8080"

  discovery-server:
    build: "./discovery-server"
    container_name: discovery-server
    restart: always
    env_file:
      - ./discovery-server/src/main/resources/.env
    ports:
      - "8761:8761"

  mail-sender:
    build: "./mail-sender"
    container_name: mail-sender-container
    restart: always
    depends_on:
      - discovery-server
      - postgresql-db
      - api-gateway
    env_file:
      - ./mail-sender/src/main/resources/.env
    ports:
      - "8082"

  swot-analysis:
    build: "./swot-analysis-service"
    container_name: swot-analysis-service-container
    restart: always
    depends_on:
      - discovery-server
      - mongo
      - api-gateway
    env_file:
      - ./swot-analysis-service/src/main/resources/.env
    ports:
      - "8083"

  auth-user-service:
    build: "./auth-user-service"
    container_name: auth-user-service-container
    restart: always
    depends_on:
      - discovery-server
      - postgresql-db
      - api-gateway
    env_file:
      - ./auth-user-service/src/main/resources/.env
    ports:
      - "8083"
