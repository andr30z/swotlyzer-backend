.env:
  prefix: ""

server:
  port: 0


eureka:
  instance:
    prefer-ip-address: ${EUREKA_PREFER_IP_ADDRESS}
  client:
    service-url:
      defaultZone: ${EUREKA_DEFAULTZONE}
# spring.cloud.compatibility-verifier.enabled=false
management:
  endpoints:
    jmx:
      exposure:
        include: "*"
authentication:
  auth:
    tokenExpirationMsec: ${TOKEN_EXPIRATION_MSEC}
    tokenSecret: ${TOKEN_SECRET}
    refreshTokenExpirationMsec: ${REFRESH_TOKEN_EXPIRATION_MSEC}
    accessTokenCookieName: accessToken
    refreshTokenCookieName: refreshToken


spring:
  application:
    name: auth-user-service
  datasource:
    url: ${AUTH_SERVICE_POSTGRESQL_CONNECTION}
    username: ${AUTH_SERVICE_POSTGRESQL_USERNAME}
    password: ${AUTH_SERVICE_POSTGRESQL_PASSWORD}
  cloud:
    compatibility-verifier:
      enabled: false
  zipkin:
    base-url: http://localhost:9411
  sleuth:
    sampler:
      probability: 1.0
  flyway:
    baselineOnMigrate: true
    url: ${AUTH_SERVICE_POSTGRESQL_CONNECTION}
    user: ${AUTH_SERVICE_POSTGRESQL_USERNAME}
    password: ${AUTH_SERVICE_POSTGRESQL_PASSWORD}
  kafka:
    topic:
      name: mail-sender-topic
    consumer:
      properties:
        request:
          timeout:
            ms: 15000
    producer:
      bootstrap-servers: ${BROKER_URL}
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        request:
          timeout:
            ms: 15000
