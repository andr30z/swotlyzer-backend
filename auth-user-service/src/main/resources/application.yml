.env:
  prefix: ""

mail-sender-url: http://mail-sender-service/api/v1/email/send
management:
  endpoints:
    jmx:
      exposure:
        include: "*"
server:
  port: 0
authentication:
  auth:
    tokenSecret: ${TOKEN_SECRET}
    tokenExpirationMsec: ${TOKEN_EXPIRATION_MSEC}
    refreshTokenExpirationMsec: ${REFRESH_TOKEN_EXPIRATION_MSEC}
    accessTokenCookieName: accessToken
    refreshTokenCookieName: refreshToken
eureka:
  client:
    service-url:
      defautlZone: http://eureka:password@localhost:8761/eureka

spring:
  zipkin:
    base-url: http://localhost:9411
  sleuth: 
    sampler: 
      probability: 1.0
  flyway:
    baselineOnMigrate: true
    url: ${AUTH_SERVICE_POSTGRESQL_CONNECTION}
    user: ${AUTH_SERVICE_POSTGRESQL_USERNAME}
    password: ${AUTH_SERVICE_POSTGRESQL_PASSWORD}
  kafka:
    topic:
      name: mail-sender-topic
    consumer:
      properties:
        request:
          timeout:
            ms: 15000
    producer:
      bootstrap-servers: localhost:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        request:
          timeout:
            ms: 15000
  application:
    name: auth-user-service
  datasource:
    url: ${AUTH_SERVICE_POSTGRESQL_CONNECTION}
    username: ${AUTH_SERVICE_POSTGRESQL_USERNAME}
    password: ${AUTH_SERVICE_POSTGRESQL_PASSWORD}



  